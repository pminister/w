Import re
From nltk.tokenize import sent_tokenize
From sklearn.feature_extraction.text import TfidfVectorizer
From sklearn.metrics.pairwise import cosine_similarity
# Text to summarize
Text = “Hello all, Welcome to Python Programming Academy. Python Programming Academy is a nice
platform to learn new programming skills. It is difficult to get enrolled in this Academy.”
# Preprocess the text to remove special characters and digits
Preprocessed_text = re.sub(r’[^a-zA-Z\s]’, ‘’, text)
# Tokenize the preprocessed text into sentences
Sentences = sent_tokenize(preprocessed_text)
# Calculate the importance score of each sentence using TF-IDF
Vectorizer = TfidfVectorizer()
Tfidf_matrix = vectorizer.fit_transform(sentences)
Similarity_matrix = cosine_similarity(tfidf_matrix)
# Select top N sentences based on their importance score
N = 2
Top_sentences = sorted(range(len(similarity_matrix[-1])), key=lambda i: similarity_matrix[-1][i])[-N:]
# Concatenate the top sentences to form the summary
Summary = ‘’
For i in top_sentences:
Summary += sentences[i] + ‘ ‘
Print(summary)